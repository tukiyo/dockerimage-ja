#cloud-config
# curl -L http://goo.gl/eO5tbp -o cloud-config.yml
# coreos-install -d /dev/vda -C alpha -V 472.0.0 -c cloud-config.yml
hostname: core4.localdomain

coreos:
  update:
    reboot-strategy: off
  units:
    - name: timezone.service
      command: start
      content: "[Unit]\nDescription=timezone\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/ln -sf /usr/share/zoneinfo/Japan /etc/localtime\n"
# bond0 start
    - name: eth0.network
      command: restart
      content: "[Match]\nName=eth0\n\n[Network]\nBond=bond0"
    - name: eth1.network
      command: restart
      content: "[Match]\nName=eth1\n\n[Network]\nBond=bond0"
    - name: bond0.netdev
      command: restart
      content: "[NetDev]\nName=bond0\nKind=bond"
    - name: bond0.network
      command: restart
      content: |
        [Match]
        Name=bond0
 
        [Network]
        Address=192.168.100.4/24
        Gateway=192.168.100.1
        DNS=8.8.8.8
        DNS=8.8.4.4
# bond0 end
    - name: systemd-networkd.service
      command: restart
#    - name: sshd.socket
#      command: restart
#      content: "[Socket]\nListenStream=2222\nAccept=yes"

users:
  - name: core
    passwd: raizu1Ah
    groups:
      - sudo
      - docker
    coreos-ssh-import-github: tukiyo

write_files:
  - path: /home/core/.bashrc
    permissions: 0644
    owner: core
    content: |
      export TZ='Asia/Tokyo'
      alias systemctl='sudo systemctl'
      alias journalctl='sudo journalctl'
      alias vi='vim -p'
      alias d='sudo docker'
      alias drun='sudo docker run --privileged -it -d'
      alias dexec='sudo docker exec -it'
      alias dps='sudo docker ps -a'
      dexe() {
          if [ -z "$1" ];then
              sudo docker ps -a
          else
              sudo docker exec -it $1 bash
          fi
      }
      #dcleanall() {
      #    for c in `sudo docker ps -a | awk '/^[^C]/{print $1}'`
      #    do
      #        sudo docker rm -f $c
      #    done
      #}
      ## snippet
      # docker commit -a "tukiyo3 <tukiyo3@gmail.com>" e132e5667707 private/testenv
      # docker save -o testenv.tar private/testenv
      # docker load -i testenv.tar

  - path: /etc/ssh/sshd_config
    permissions: 0600
    owner: root:root
    content: |
        UsePrivilegeSeparation sandbox
        Subsystem sftp internal-sftp
        PermitRootLogin no
        AllowUsers core
        PasswordAuthentication yes
        UseDNS no
